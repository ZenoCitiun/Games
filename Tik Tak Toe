import tkinter as tk
from tkinter import simpledialog, messagebox

class TicTacToe:
    def __init__(self, player1, player2):
        self.root = tk.Tk()
        self.root.title("Tic Tac Toe")

        self.player1 = player1
        self.player2 = player2

        self.board = [[' ' for _ in range(3)] for _ in range(3)]
        self.current_player = 'X'
        self.winner = None

        self.buttons = [[None for _ in range(3)] for _ in range(3)]

        for i in range(3):
            for j in range(3):
                self.buttons[i][j] = tk.Button(self.root, text='', font=('normal', 20), width=5, height=2,
                                               command=lambda row=i, col=j: self.make_move(row, col))
                self.buttons[i][j].grid(row=i, column=j)

    def make_move(self, row, col):
        if not self.winner and not self.is_board_full() and self.board[row][col] == ' ':
            self.board[row][col] = self.current_player
            self.buttons[row][col]['text'] = self.current_player
            if self.check_winner(row, col):
                self.winner = self.current_player
                messagebox.showinfo("Game Over", f"{self.get_player_name(self.winner)} wins!")
                self.root.destroy()
            else:
                self.switch_player()
                if self.is_board_full():
                    messagebox.showinfo("Game Over", "It's a draw!")
                    self.root.destroy()

    def switch_player(self):
        self.current_player = 'O' if self.current_player == 'X' else 'X'

    def get_player_name(self, player_symbol):
        return self.player1 if player_symbol == 'X' else self.player2

    def check_winner(self, last_row, last_col):
        # Check the row
        if all(self.board[last_row][col] == self.current_player for col in range(3)):
            return True

        # Check the column
        if all(self.board[row][last_col] == self.current_player for row in range(3)):
            return True

        # Check diagonals if applicable
        if last_row == last_col or last_row + last_col == 2:
            if all(self.board[i][i] == self.current_player for i in range(3)) or \
                    all(self.board[i][2 - i] == self.current_player for i in range(3)):
                return True

        return False

    def is_board_full(self):
        return all(cell != ' ' for row in self.board for cell in row)

    def run(self):
        self.root.mainloop()


def main():
    player1 = simpledialog.askstring("Input", "Enter Player 1's Name:")
    player2 = simpledialog.askstring("Input", "Enter Player 2's Name:")

    if player1 and player2:
        game = TicTacToe(player1, player2)
        game.run()
    else:
        print("Invalid player names. Exiting...")

if __name__ == "__main__":
    main()
